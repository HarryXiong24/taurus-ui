@mixin button-size($padding-y, $padding-x, $font-size, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  border-radius: $border-radius;
}

@mixin button-style(
  $background,
  $border,
  $color,
  $hover-background: lighten($background, 7.5%),
  $hover-border: lighten($border, 10%),
  $hover-color: $color
) {
  color: $color;
  background: $background;
  border-color: $border;
  transition: all $animate-time $animate-type;

  &:hover {
    color: $hover-color;
    background: lighten($hover-background, 7.5%);
    border-color: lighten($hover-border, 10%);
  }

  &:focus,
  &.focus {
    color: $hover-color;
    background: lighten($hover-background, 7.5%);
    border-color: lighten($hover-border, 10%);
  }

  &:disabled,
  &.disabled {
    color: $color;
    background: $background;
    border-color: $border;
  }
}

@mixin alert-size($padding-y, $padding-x, $font-size, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  border-radius: $border-radius;
}

@mixin alert-style($background, $border, $color) {
  min-width: max-content;
  color: $color;
  background: lighten($background, 40.5%);
  border-color: $border;
}

@mixin zoom-animation(
  $direction: 'top',
  $scaleStart: scaleY(0),
  $scaleEnd: scaleY(1),
  $origin: center top
) {
  .zoom-in-#{$direction}-enter {
    transform: $scaleStart;
    opacity: 0;
  }

  .zoom-in-#{$direction}-enter-active {
    transform: $scaleEnd;
    transform-origin: $origin;
    opacity: 1;
    transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms,
      opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
  }

  .zoom-in-#{$direction}-exit {
    opacity: 1;
  }

  .zoom-in-#{$direction}-exit-active {
    transform: $scaleStart;
    transform-origin: $origin;
    opacity: 0;
    transition: transform 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms,
      opacity 300ms cubic-bezier(0.23, 1, 0.32, 1) 100ms;
  }
}

@mixin input-style(
  $padding-y,
  $padding-x,
  $font-family,
  $font-size,
  $font-weight,
  $line-height,
  $color: rgba($black, 0.95)
) {
  padding: $padding-y $padding-x;
  color: $color;
  font-weight: $font-weight;
  font-size: $font-size;
  font-family: $font-family;
  line-height: $line-height;
}

@mixin border-right-radius($radius) {
  border-top-right-radius: $radius;
  border-bottom-right-radius: $radius;
}

@mixin border-left-radius($radius) {
  border-top-left-radius: $radius;
  border-bottom-left-radius: $radius;
}

@mixin flex-center($justify: center, $align: center) {
  display: flex;
  align-items: $align;
  justify-content: $justify;
}

@mixin ellipsis($n: 2) {
  overflow: hidden;
  text-overflow: ellipsis;

  @if ($n >= 2) {
    display: -webkit-box;
    -webkit-line-clamp: $n;
    -webkit-box-orient: vertical;
  }

  @if ($n == 1) {
    white-space: nowrap;
  }
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }

  @-moz-keyframes #{$animationName} {
    @content;
  }

  @-o-keyframes #{$animationName} {
    @content;
  }

  @keyframes #{$animationName} {
    @content;
  }
}

@include keyframes(xbear-fade-out) {
  from {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }

  to {
    transform: translate3d(0, -50px, 0);
    opacity: 0;
  }
}

@include keyframes(xbear-fade-in) {
  from {
    transform: translate3d(0, -50px, 0);
    opacity: 0;
  }

  to {
    transform: scale(1) translate3d(0, 0, 0);
    opacity: 1;
  }
}

@include keyframes(xbear-rotate) {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}
